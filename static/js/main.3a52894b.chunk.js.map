{"version":3,"sources":["Components/Navbar.jsx","Components/Thought.jsx","Components/Thoughts.jsx","Components/Footer.jsx","Components/SubmitModalThought.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","readMode","setReadMode","className","style","fontSize","paddingRight","htmlFor","type","id","onClick","localStorage","setItem","JSON","stringify","checked","readOnly","paddingLeft","Thought","thought","dateTime","onDelete","textAlign","Thoughts","thoughts","mapThoughts","map","datetime","Footer","href","rel","target","SubmitModalThought","onAdd","closeModal","React","useRef","useState","setThought","borderRadius","data-bs-toggle","data-bs-target","aria-hidden","tabIndex","aria-labelledby","ref","data-bs-dismiss","aria-label","onSubmit","e","Date","toDateString","toTimeString","slice","preventDefault","length","current","click","alert","placeholder","minLength","maxLength","value","onChange","required","App","getThoughts","parse","getItem","getToggle","isUser","setThougths","addThought","minHeight","buttonModal","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a52894b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navbar = ({ readMode, setReadMode }) => {\n  const toggleButton = () => {\n    setReadMode(!readMode);\n\n    localStorage.setItem(\"toggle\", JSON.stringify(!readMode));\n  };\n  return (\n    <header>\n      <nav\n        className={\n          readMode\n            ? \"navbar navbar-dark bg-success\"\n            : \"navbar navbar-light text-light bg-primary\"\n        }\n      >\n        <div className=\"container-fluid\">\n          <span className=\"navbar-brand text-light\">Thoughts Collector</span>\n          <div className=\"toggle-mode d-flex align-items-center justify-content-center\">\n            <i\n              className=\"fas fa-sun\"\n              style={{ fontSize: \"28px\", paddingRight: \"8px\" }}\n            ></i>\n            <label className=\"theme-switch\" htmlFor=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"checkbox\"\n                onClick={toggleButton}\n                checked={readMode}\n                readOnly={true}\n              />\n              <div className=\"slider round\"></div>\n            </label>\n            <i\n              className=\"fas fa-moon\"\n              style={{ fontSize: \"25px\", paddingLeft: \"10px\" }}\n            ></i>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Thought = ({ id, thought, dateTime, onDelete, readMode }) => {\n  return (\n    <>\n      <div\n        className={\n          !readMode\n            ? \"card mt-4 bg-light text-dark rounded-3\"\n            : \"card mt-4 bg-black text-light rounded-3\"\n        }\n      >\n        <div className=\"card-body d-flex\">\n          <div>\n            <p className=\"card-title\" style={{ textAlign: \"justify\" }}>\n              {thought}\n            </p>\n\n            <p\n              className={\n                !readMode ? \"card-text text-info\" : \"card-text text-warning\"\n              }\n            >\n              {dateTime}\n            </p>\n          </div>\n          <div className=\"ms-auto align-self-center ps-4\">\n            <button className=\"btn btn-danger\" onClick={() => onDelete(id)}>\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Thought;\n","import React from \"react\";\nimport Thought from \"./Thought.jsx\";\nconst Thoughts = ({ thoughts, onDelete, readMode }) => {\n  const mapThoughts = thoughts.map((thoughts) => {\n    return (\n      <Thought\n        id={thoughts.id}\n        key={thoughts.id}\n        thought={thoughts.thought}\n        dateTime={thoughts.datetime}\n        onDelete={onDelete}\n        readMode={readMode}\n      />\n    );\n  });\n  return <div className=\"container mt-4\">{mapThoughts}</div>;\n};\n\nexport default Thoughts;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"mt-4\">\n      <div className=\"footer\">\n        <p className=\"text-secondary text-center\">\n          Developed by<span> </span>\n          <a\n            href=\"https://github.com/anzeqar\"\n            rel=\"noreferrer\"\n            className=\"link-info\"\n            target=\"_blank\"\n          >\n            @anzeqar\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\n\nconst SubmitModalThought = ({ onAdd, readMode }) => {\n  const closeModal = React.useRef(null);\n  const [thought, setThought] = useState(\"\");\n  const submitThought = (e) => {\n    let datetime = new Date();\n    datetime =\n      datetime.toDateString() + \" @ \" + datetime.toTimeString().slice(0, 8);\n    e.preventDefault();\n    if (thought.length > 10) {\n      onAdd({ thought, datetime });\n      setThought(\"\");\n      closeModal.current.click();\n    } else {\n      alert(\"Enter More than 10 Characters\");\n    }\n  };\n  return (\n    <>\n      <div\n        className=\"d-flex justify-content-end pe-4 pb-4\n       fixed-bottom\"\n      >\n        <button\n          type=\"button\"\n          style={{ borderRadius: \"80%\" }}\n          className=\"btn btn-primary\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#exampleModal\"\n        >\n          <i className=\"fa fa-plus fs-1\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n\n      <div\n        className=\"modal fade\"\n        id=\"exampleModal\"\n        tabIndex=\"-1\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\">\n          <div\n            className={\n              readMode\n                ? \"modal-content bg-dark text-light\"\n                : \"modal-content bg-light text-dark\"\n            }\n          >\n            <div className=\"modal-header border-0\">\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                Thoughts Collector\n              </h5>\n              <button\n                ref={closeModal}\n                type=\"button\"\n                className=\"btn-close bg-light\"\n                style={{ borderRadius: \"50%\" }}\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div className=\"modal-body\">\n              <form onSubmit={submitThought}>\n                <div className=\"mb-3\">\n                  <textarea\n                    type=\"text\"\n                    className={\n                      !readMode\n                        ? \"form-control bg-light text-dark\"\n                        : \"form-control bg-dark text-light\"\n                    }\n                    id=\"thought\"\n                    placeholder=\"Write your thoughts here.....\"\n                    minLength=\"10\"\n                    maxLength=\"50000\"\n                    value={thought}\n                    onChange={(e) => setThought(e.target.value)}\n                    required={true}\n                  ></textarea>\n                  <div id=\"emailHelp\" className=\"form-text\">\n                    Your thought will be private and nobody can read it trust me\n                  </div>\n                </div>\n\n                <div className=\"d-flex\">\n                  <button type=\"submit\" className=\"btn btn-primary w-100\">\n                    Submit\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SubmitModalThought;\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar.jsx\";\nimport Thoughts from \"./Components/Thoughts.jsx\";\nimport Footer from \"./Components/Footer.jsx\";\nimport { useState } from \"react\";\nimport SubmitModalThought from \"./Components/SubmitModalThought.jsx\";\n\nconst App = () => {\n  let getThoughts = JSON.parse(localStorage.getItem(\"thoughts\"));\n  const getToggle = JSON.parse(localStorage.getItem(\"toggle\"));\n  const isUser = JSON.parse(localStorage.getItem(\"isUser\"));\n  const [thoughts, setThougths] = useState(\n    isUser\n      ? getThoughts\n      : [\n          {\n            id: 1,\n            thought: \"Sample Thought #1\",\n            datetime: \"Tue Sep 28 2021 @ 12:50:41\",\n          },\n          {\n            id: 2,\n            thought: \"Sample Thought #2\",\n            datetime: \"Tue Sep 28 2021 @ 12:50:47\",\n          },\n          {\n            id: 3,\n            thought: \"Sample Thought #3\",\n            datetime: \"Tue Sep 28 2021 @ 12:50:53\",\n          },\n          {\n            id: 4,\n            thought: \"Sample Thought #4\",\n            datetime: \"Tue Sep 28 2021 @ 12:50:47\",\n          },\n          {\n            id: 5,\n            thought: \"Sample Thought #5\",\n            datetime: \"Tue Sep 28 2021 @ 12:50:53\",\n          },\n        ]\n  );\n\n  const [readMode, setReadMode] = useState(\n    getToggle === \"null\" ? false : getToggle\n  );\n\n  localStorage.setItem(\"thoughts\", JSON.stringify(thoughts));\n\n  const deleteThought = (id) => {\n    localStorage.setItem(\"isUser\", JSON.stringify(true));\n    setThougths(thoughts.filter((thoughts) => thoughts.id !== id));\n    localStorage.setItem(\"thoughts\", JSON.stringify(thoughts));\n  };\n\n  const addThought = (addThought) => {\n    localStorage.setItem(\"isUser\", JSON.stringify(true));\n    const id = thoughts.length + 1;\n    addThought = { id, ...addThought };\n    setThougths([...thoughts, addThought]);\n    localStorage.setItem(\"thoughts\", JSON.stringify(thoughts));\n  };\n\n  return (\n    <div\n      className={\n        readMode ? \" bg-dark text-light pb-2\" : \" bg-light text-dark pb-2\"\n      }\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Navbar\n        buttonModal=\"Add A Thought\"\n        onAdd={addThought}\n        readMode={readMode}\n        setReadMode={setReadMode}\n      />\n      <SubmitModalThought onAdd={addThought} readMode={readMode} />\n      <div>\n        {thoughts.length > 0 ? (\n          <Thoughts\n            thoughts={thoughts}\n            onDelete={deleteThought}\n            readMode={readMode}\n          />\n        ) : (\n          <div className=\"container mt-4 text-secondary text-center\">\n            <p className=\"text-center p-4\">\n              No Thoughts Left... Wanna Add One ?\n            </p>\n          </div>\n        )}\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}